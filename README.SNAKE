
Snake created with Ai on Python



RAW CODE:




import pygame
import random
import math

pygame.init()

width, height = 640, 480
window = pygame.display.set_mode((width, height))
pygame.display.set_caption("Snake Game")

BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
WHITE = (255, 255, 255)

snake_size = 20
snake_speed = 10
x_pos = width // 2
y_pos = height // 2
x_speed = 0
y_speed = 0
snake_body = []
snake_length = 1

food_size = 20
food_x = random.randint(0, width - food_size)
food_y = random.randint(0, height - food_size)

highscore = 0

clock = pygame.time.Clock()

game_over = False
paused = False

def check_collision(x1, y1, x2, y2, size):
    if x1 < x2 + size and x1 + size > x2 and y1 < y2 + size and y1 + size > y2:
        return True
    return False

def display_highscore():
    font = pygame.font.Font(None, 36)
    text = font.render("Highscore: " + str(highscore), True, WHITE)
    angle = math.sin(pygame.time.get_ticks() * 0.01) * 2
    rotated_text = pygame.transform.rotate(text, angle)
    text_rect = rotated_text.get_rect(center=(width // 2, 30))
    window.blit(rotated_text, text_rect)

def display_pause_screen():
    font = pygame.font.Font(None, 50)
    text1 = font.render("Pause", True, WHITE)
    text2 = font.render("Weiter spielen", True, WHITE)
    text3 = font.render("Beenden", True, WHITE)
    text_rect1 = text1.get_rect(center=(width // 2, height // 2 - 100))
    text_rect2 = text2.get_rect(center=(width // 2, height // 2))
    text_rect3 = text3.get_rect(center=(width // 2, height // 2 + 100))
    window.blit(text1, text_rect1)
    window.blit(text2, text_rect2)
    window.blit(text3, text_rect3)
    return text_rect2, text_rect3

def display_end_screen():
    font = pygame.font.Font(None, 50)
    text1 = font.render("Spiel vorbei!", True, WHITE)
    text2 = font.render("Neu start", True, WHITE)
    text3 = font.render("Beenden", True, WHITE)
    text_rect1 = text1.get_rect(center=(width // 2, height // 2 - 100))
    text_rect2 = text2.get_rect(center=(width // 2, height // 2))
    text_rect3 = text3.get_rect(center=(width // 2, height // 2 + 100))
    window.blit(text1, text_rect1)
    window.blit(text2, text_rect2)
    window.blit(text3, text_rect3)
    return text_rect2, text_rect3

def restart_game():
    global x_pos, y_pos, x_speed, y_speed, snake_body, snake_length, food_x, food_y, highscore
    x_pos = width // 2
    y_pos = height // 2
    x_speed = 0
    y_speed = 0
    snake_body = []
    snake_length = 1
    food_x = random.randint(0, width - food_size)
    food_y = random.randint(0, height - food_size)
    highscore = 0

while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True

        if not paused:
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_speed = -snake_size
                    y_speed = 0
                elif event.key == pygame.K_RIGHT:
                    x_speed = snake_size
                    y_speed = 0
                elif event.key == pygame.K_UP:
                    x_speed = 0
                    y_speed = -snake_size
                elif event.key == pygame.K_DOWN:
                    x_speed = 0
                    y_speed = snake_size
                elif event.key == pygame.K_ESCAPE:
                    paused = True

    x_pos += x_speed
    y_pos += y_speed

    if x_pos < 0 or x_pos >= width or y_pos < 0 or y_pos >= height:
        game_over = True

    window.fill(BLACK)

    pygame.draw.rect(window, GREEN, [food_x, food_y, food_size, food_size])

    snake_head = [x_pos, y_pos]
    snake_body.append(snake_head)
    if len(snake_body) > snake_length:
        del snake_body[0]

    for segment in snake_body[:-1]:
        if check_collision(x_pos, y_pos, segment[0], segment[1], snake_size):
            game_over = True

    for segment in snake_body:
        pygame.draw.rect(window, RED, [segment[0], segment[1], snake_size, snake_size])

    display_highscore()

    pygame.display.update()

    if check_collision(x_pos, y_pos, food_x, food_y, food_size):
        food_x = random.randint(0, width - food_size)
        food_y = random.randint(0, height - food_size)
        snake_length += 1
        if snake_length > highscore:
            highscore = snake_length

    clock.tick(snake_speed)

    while paused:
        continue_game_rect, exit_game_rect = display_pause_screen()
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
                paused = False
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    paused = False
                elif event.key == pygame.K_RETURN:
                    paused = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:
                    if continue_game_rect.collidepoint(event.pos):
                        paused = False
                    elif exit_game_rect.collidepoint(event.pos):
                        game_over = True
                        paused = False
                        pygame.quit()
                        exit()

    restart_clicked = False
    if game_over:
        while True:
            restart_game_rect, exit_game_rect = display_end_screen()
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    exit()
                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if event.button == 1:
                        if restart_game_rect.collidepoint(event.pos):
                            restart_clicked = True
                            break
                        elif exit_game_rect.collidepoint(event.pos):
                            pygame.quit()
                            exit()

            if restart_clicked:
                restart_game()
                game_over = False
                paused = False
                restart_clicked = False
                break

    pygame.display.update()

pygame.quit()
